{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-metrodoralakehouse-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/p_AircallCallsBronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataAircallToBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetVariableDateToLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:50",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$.meta.next_page_link"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Aircall",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/calls?per_page=50&from=',variables('unix'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/aircall/calls/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))\n\n\n\n",
										"type": "Expression"
									},
									"filename": "aircallcalls.json"
								}
							}
						]
					},
					{
						"name": "SetVariableDateToLoad",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "unix",
							"value": {
								"value": "@{div(sub(ticks(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad))))), ticks('1970-01-01')),10000000)}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"variables": {
					"unix": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-05T10:00:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_AircallCallsBronzeF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataAircallToBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetVariableDateToLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$.meta.next_page_link"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Aircall",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/calls?per_page=50&from=',variables('unix'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/aircall/calls/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))\n\n\n\n",
										"type": "Expression"
									},
									"filename": "aircallcalls.json"
								}
							}
						]
					},
					{
						"name": "SetVariableDateToLoad",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "unix",
							"value": {
								"value": "@{div(sub(ticks(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad))))), ticks('1970-01-01')),10000000)}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"variables": {
					"unix": {
						"type": "String"
					}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-05T09:59:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_AircallCallsBronzeF0_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataAircallToBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SetVariableDateToLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$.meta.next_page_link"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Aircall",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/calls?per_page=50&from=',variables('unix'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/aircall/calls/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))\n\n\n\n",
										"type": "Expression"
									},
									"filename": "aircallcalls.json"
								}
							}
						]
					},
					{
						"name": "SetVariableDateToLoad",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "unix",
							"value": {
								"value": "@{div(sub(ticks('2024-09-01'), ticks('1970-01-01')),10000000)}\t",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"unix": {
						"type": "String"
					}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-05T09:59:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_AircallCallsBronzeSilver_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('startdate'),string(formatDateTime(utcnow(),'yyyy-MM-dd')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyDataAircallToBronze",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SetVariableDateToLoad",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"AbsoluteUrl": "$.meta.next_page_link"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_Aircall",
											"type": "DatasetReference",
											"parameters": {
												"relativeurl": {
													"value": "@concat('v1/calls?per_page=50&from=',variables('unix'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adsl_json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@concat('lakehouse/aircall/calls/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))\n\n\n\n",
													"type": "Expression"
												},
												"filename": "aircallcalls.json"
											}
										}
									]
								},
								{
									"name": "SetVariableDateToLoad",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "unix",
										"value": {
											"value": "@{div(sub(ticks(variables('startdate')), ticks('1970-01-01')),10000000)}\t",
											"type": "Expression"
										}
									}
								},
								{
									"name": "NotebookAircallCallsSilver",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "CopyDataAircallToBronze",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Lakehouse/Silver/AircallCallsSilver"
									},
									"linkedServiceName": {
										"referenceName": "ls_AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "NotebookAircallMaxDate",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "NotebookAircallCallsSilver",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Lakehouse/Silver/AircallMaxDate"
									},
									"linkedServiceName": {
										"referenceName": "ls_AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SetVariableMaxDate",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "NotebookAircallMaxDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "startdate",
										"value": {
											"value": "@activity('NotebookAircallMaxDate').output.runOutput",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"unix": {
						"type": "String"
					},
					"startdate": {
						"type": "String",
						"defaultValue": "2024-09-01"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze"
				},
				"annotations": [],
				"lastPublishTime": "2024-12-02T09:33:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_AircallCallsGoldF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowAircallCallsGoldF0",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_AircallCallsGoldF0",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceAircallCallsSilver": {},
									"sourceCallsGoldF0": {},
									"sinkCallsGoldF0": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/GoldF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-05T09:59:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_BudgetBronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataBudgetBronze",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adsl_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "master",
									"folder": "Budget",
									"filename": "masterbudget.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_parquet",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/budget/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "masterbudget.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Lakehouse/Bronze"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-28T11:53:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_BudgetBronzeF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataBudgetBronzeF0",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_adsl_csv",
								"type": "DatasetReference",
								"parameters": {
									"container": "master",
									"folder": "Budget",
									"filename": "masterbudget.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_parquet",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/budget/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "masterbudget.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-05T09:59:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_Classlife')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebClasslifeEnroll_groups",
						"description": "Activity web that calls the endpoint enroll_groups",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"apiKey": {
									"value": "@pipeline().parameters.API_KEY",
									"type": "Expression"
								},
								"clientId": {
									"value": "@pipeline().parameters.API_CLIENT",
									"type": "Expression"
								}
							},
							"url": {
								"value": "@concat('https://api.classlife.io/api/v1/enroll_groups')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ClasslifeProductos",
						"description": "ClasslifeEnrollGroups",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebClasslifeEnroll_groups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"apiKey": {
										"value": "@pipeline().parameters.API_KEY",
										"type": "Expression"
									},
									"clientId": {
										"value": "@pipeline().parameters.API_CLIENT",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Classlife",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "enroll_groups?showMetas=1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife/enroll_groups/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "JsaClassLifeProductos.json"
								}
							}
						]
					},
					{
						"name": "WebClasslifeStudents",
						"description": "Activity web that calls the endpoint Students",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"apiKey": {
									"value": "@pipeline().parameters.API_KEY",
									"type": "Expression"
								},
								"clientId": {
									"value": "@pipeline().parameters.API_CLIENT",
									"type": "Expression"
								}
							},
							"url": {
								"value": "@concat('https://api.classlife.io/api/v1/students')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ClasslifeStudents",
						"description": "ClasslifeStudents",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebClasslifeStudents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"apiKey": {
										"value": "@pipeline().parameters.API_KEY",
										"type": "Expression"
									},
									"clientId": {
										"value": "@pipeline().parameters.API_CLIENT",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Classlife",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "students?showMetas=1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife/students/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "JsaClassLifeStudents.json"
								}
							}
						]
					},
					{
						"name": "WebClasslifeEnrollments",
						"description": "Activity web that calls the endpoint Enrollments",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"apiKey": {
									"value": "@pipeline().parameters.API_KEY",
									"type": "Expression"
								},
								"clientId": {
									"value": "@pipeline().parameters.API_CLIENT",
									"type": "Expression"
								}
							},
							"url": {
								"value": "@concat('https://api.classlife.io/api/v1/enrollments')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Enrollments",
						"description": "Enrollments",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebClasslifeEnrollments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"apiKey": {
										"value": "@pipeline().parameters.API_KEY",
										"type": "Expression"
									},
									"clientId": {
										"value": "@pipeline().parameters.API_CLIENT",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Classlife",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "enrollments?showMetas=1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife/enrollments/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "JsaClassLifeEnrollments.json"
								}
							}
						]
					},
					{
						"name": "WebClasslifeReceipts",
						"description": "Activity web that calls the endpoint Receipts",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"apiKey": {
									"value": "@pipeline().parameters.API_KEY",
									"type": "Expression"
								},
								"clientId": {
									"value": "@pipeline().parameters.API_CLIENT",
									"type": "Expression"
								}
							},
							"url": {
								"value": "@concat('https://api.classlife.io/api/v1/enrollments')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Receipts",
						"description": "Receipts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebClasslifeReceipts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"apiKey": {
										"value": "@pipeline().parameters.API_KEY",
										"type": "Expression"
									},
									"clientId": {
										"value": "@pipeline().parameters.API_CLIENT",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Classlife",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "receipts?showMetas=1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/classlife/receipts/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "JsaClassLifeReceipts.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"API_CLIENT": {
						"type": "string",
						"defaultValue": "919"
					},
					"API_KEY": {
						"type": "string",
						"defaultValue": "C!Fd4e045d16e5544"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-05T00:19:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataClientifyBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydeals.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "WebGetToken CIEP",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifyCIEP/2dc5256643a6405392ec37abd7b74d55?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyBronze_Ciep",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken CIEP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken CIEP').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify_Ciep",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsciep.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken FP",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytokenFP/4498a027b1af41fd8d8fe01dc9f45b46?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyBronze_Fp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken FP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken FP').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify_Fp",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsfp.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T17:05:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeCIEP_FP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataClientifyBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydeals.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "WebGetToken CIEP",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifyCIEP/2dc5256643a6405392ec37abd7b74d55?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyBronze_Ciep",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken CIEP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken CIEP').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify_Ciep",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsciep.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken FP",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytokenFP/4498a027b1af41fd8d8fe01dc9f45b46?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyBronze_Fp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken FP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken FP').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify_Fp",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsfp.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "Lakehouse/Bronze"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T16:47:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataClientifyBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/deals/?page_size=250&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydeals.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-05T09:59:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeF0_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataClientifyBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:01.500",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/deals/?page_size=250&created[gte]=09-01-2023&created[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydeals.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-05T09:59:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeF0_IdForDelete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyIdForDeleteBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": "https://api.clientify.net/v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/clientify/idfordelete/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsidfordelete.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T14:27:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeF0_LostReason')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyLostReasonBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id,lost_reason&modified[gte]=',formatDateTime(addDays(utcnow(),int(concat('-',string(pipeline().parameters.dayToLoad)))),'MM-dd-yyyy'),'&modified[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/clientify/lostreason/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealslostreason.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"dayToLoad": {
						"type": "string",
						"defaultValue": "7"
					}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-15T12:36:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronzeF0_LostReason_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyLostReasonBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": "https://api.clientify.net/v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id,lost_reason"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehousef0/clientify/lostreason/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealslostreason.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/BronzeF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-15T12:34:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronze_Full')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataClientifyBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:01.500",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&created[gte]=09-01-2023&created[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydeals.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "WebGetToken CIEP",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifyCIEP/2dc5256643a6405392ec37abd7b74d55?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyBronze_Ciep",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken CIEP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken CIEP').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify_Ciep",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&created[gte]=09-01-2023&created[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsciep.json"
								}
							}
						]
					},
					{
						"name": "WebGetToken FP",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytokenFP/4498a027b1af41fd8d8fe01dc9f45b46?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyBronze_Fp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken FP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken FP').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify_Fp",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": {
										"value": "@concat('v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id, owner, owner_name, name, amount, amount_user, currency, contact, contact_name, contact_email, contact_phone, contact_medium, contact_source, created, modified, expected_closed_date, actual_closed_date, company, company_name, source, deal_source, status, lost_reason, status_desc, probability, probability_desc, pipeline_stage, pipeline_stage_desc, pipeline, pipeline_desc, custom_fields&created[gte]=09-01-2023&created[lt]=',formatDateTime(addDays(utcnow(),+1),'MM-dd-yyyy'))",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/deals/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsfp.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Lakehouse/Bronze"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T17:05:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsBronze_IdForDelete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebGetToken",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://kvmetrodoralakehousedev.vault.azure.net/secrets/clientifytoken/71f1cbb9aa6a4569ba657a15bcbd0350?api-version=7.0",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "CopyDataClientifyIdForDeleteBronze",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WebGetToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Content-Type": "application/json",
									"Authorization": {
										"value": "@concat('Token ',activity('WebGetToken').output.value)",
										"type": "Expression"
									}
								},
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_Clientify",
								"type": "DatasetReference",
								"parameters": {
									"relativeurl": "https://api.clientify.net/v1/mob/deals/?serializer=DealDynamic&page_size=250&fields=id"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@concat('lakehouse/clientify/dealsidfordelete/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd'))",
										"type": "Expression"
									},
									"filename": "clientifydealsidfordelete.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Lakehouse/Bronze"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-27T16:35:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsGoldF0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowClientifyDealsGoldF0",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ClientifyDealsGoldF0",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceClientifyDealsSilverF0": {},
									"sourceVentasGoldF0": {},
									"sinkVentasGoldF0": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/GoldF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-05T09:59:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsGoldF0_IdForDelete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataflowClientifyDealsGoldF0_IdForDelete",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ClientifyDealsGoldF0_IdForDelete",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceSalesGold": {},
									"sourceClientifyIdForDeleteSilver": {},
									"sourceSalesGold2": {},
									"sinkSalesGold": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/GoldF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T15:02:32Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_ClientifyDealsGoldF0_LeadsNetosEmail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlowClientifyDealsGoldF0_LeadsNetosEmail",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_ClientifyDealsGoldF0_LeadsNetosEmail",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceSalesGoldF0": {},
									"sinkSalesGoldF0": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "LakehouseF0/GoldF0"
				},
				"annotations": [],
				"lastPublishTime": "2024-11-05T09:59:44Z"
			},
			"dependsOn": []
		}
	]
}